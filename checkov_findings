
       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By Prisma Cloud | version: 3.2.32 

cloudformation scan results:

Passed checks: 265, Failed checks: 69, Skipped checks: 0

Check: CKV_AWS_20: "Ensure the S3 bucket does not allow READ permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone
Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20
Check: CKV_AWS_56: "Ensure S3 bucket has RestrictPublicBuckets enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22
Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLs enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19
Check: CKV_AWS_19: "Ensure the S3 bucket has server-side-encryption enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV_AWS_57: "Ensure the S3 bucket does not allow WRITE permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21
Check: CKV_AWS_20: "Ensure the S3 bucket does not allow READ permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone
Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20
Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging
Check: CKV_AWS_56: "Ensure S3 bucket has RestrictPublicBuckets enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22
Check: CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning
Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLs enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19
Check: CKV_AWS_19: "Ensure the S3 bucket has server-side-encryption enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV_AWS_57: "Ensure the S3 bucket does not allow WRITE permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	PASSED for resource: AWS::S3::Bucket.LambdaBucketConstructmyBucketC0199F5C
	File: /cdk.out/CdkProjectStack.template.json:170-203
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.LambdaBucketConstructmyLambdaServiceRoleCE5F457F
	File: /cdk.out/CdkProjectStack.template.json:379-412
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740
	File: /cdk.out/CdkProjectStack.template.json:413-461
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.LambdaBucketConstructmyLambda4C094689
	File: /cdk.out/CdkProjectStack.template.json:462-495
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.LambdaBucketConstructmyLambda4C094689
	File: /cdk.out/CdkProjectStack.template.json:462-495
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
	File: /cdk.out/CdkProjectStack.template.json:496-520
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	PASSED for resource: AWS::Lambda::Function.CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
	File: /cdk.out/CdkProjectStack.template.json:521-559
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
	File: /cdk.out/CdkProjectStack.template.json:521-559
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
	File: /cdk.out/CdkProjectStack.template.json:521-559
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
	File: /cdk.out/CdkProjectStack.template.json:560-593
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	PASSED for resource: AWS::Lambda::Function.BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
	File: /cdk.out/CdkProjectStack.template.json:618-642
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
	File: /cdk.out/CdkProjectStack.template.json:618-642
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
	File: /cdk.out/CdkProjectStack.template.json:618-642
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
	File: /cdk.out/CdkProjectStack.template.json:643-676
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
	File: /cdk.out/CdkProjectStack.template.json:677-764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
	File: /cdk.out/CdkProjectStack.template.json:765-802
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
	File: /cdk.out/CdkProjectStack.template.json:765-802
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_28: "Ensure DynamoDB point in time recovery (backup) is enabled"
	PASSED for resource: AWS::DynamoDB::Table.LambdaDynamoDBConstructOrders2AADB327
	File: /cdk.out/CdkProjectStack.template.json:803-833
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-6
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64
	File: /cdk.out/CdkProjectStack.template.json:834-867
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F
	File: /cdk.out/CdkProjectStack.template.json:868-914
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.LambdaDynamoDBConstructmyLambdaDDB794DC085
	File: /cdk.out/CdkProjectStack.template.json:915-948
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.LambdaDynamoDBConstructmyLambdaDDB794DC085
	File: /cdk.out/CdkProjectStack.template.json:915-948
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_27: "Ensure all data stored in the SQS queue is encrypted"
	PASSED for resource: AWS::SQS::Queue.SQSLambdaConstructmySQSE4D94B9B
	File: /cdk.out/CdkProjectStack.template.json:949-960
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-16-encrypt-sqs-queue
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.integrationrole42F4F507
	File: /cdk.out/CdkProjectStack.template.json:961-994
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	PASSED for resource: AWS::Lambda::Permission.EndpointbookbooksGETApiPermissionCdkProjectStackEndpoint6C6129E0GETbookbooks48B3FEA2
	File: /cdk.out/CdkProjectStack.template.json:1130-1161
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	PASSED for resource: AWS::Lambda::Permission.EndpointbookbooksGETApiPermissionTestCdkProjectStackEndpoint6C6129E0GETbookbooksC6092C2F
	File: /cdk.out/CdkProjectStack.template.json:1162-1189
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364
Check: CKV_AWS_59: "Ensure there is no open access to back-end resources through API"
	PASSED for resource: AWS::ApiGateway::Method.EndpointbookbooksGET3FC8BC46
	File: /cdk.out/CdkProjectStack.template.json:1190-1227
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-6-api-gateway-authorizer-set
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	PASSED for resource: AWS::Lambda::Permission.EndpointbookordersPOSTApiPermissionCdkProjectStackEndpoint6C6129E0POSTbookordersBA144105
	File: /cdk.out/CdkProjectStack.template.json:1243-1274
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	PASSED for resource: AWS::Lambda::Permission.EndpointbookordersPOSTApiPermissionTestCdkProjectStackEndpoint6C6129E0POSTbookorders649C4298
	File: /cdk.out/CdkProjectStack.template.json:1275-1302
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364
Check: CKV_AWS_59: "Ensure there is no open access to back-end resources through API"
	PASSED for resource: AWS::ApiGateway::Method.EndpointbookordersPOST8FF08436
	File: /cdk.out/CdkProjectStack.template.json:1303-1340
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-6-api-gateway-authorizer-set
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
	File: /cdk.out/CdkProjectStack.template.json:1803-1887
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	PASSED for resource: AWS::Lambda::Function.CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
	File: /cdk.out/CdkProjectStack.template.json:1888-1915
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
	File: /cdk.out/CdkProjectStack.template.json:1888-1915
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
	File: /cdk.out/CdkProjectStack.template.json:1888-1915
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroup.VPCLambdaSG66233BEC
	File: /cdk.out/CdkProjectStack.template.json:2359-2377
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroup.VPCLambdaSG66233BEC
	File: /cdk.out/CdkProjectStack.template.json:2359-2377
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroup.VPCLambdaSG66233BEC
	File: /cdk.out/CdkProjectStack.template.json:2359-2377
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroup.VPCLambdaSG66233BEC
	File: /cdk.out/CdkProjectStack.template.json:2359-2377
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroup.redissecgroupDE8E7888
	File: /cdk.out/CdkProjectStack.template.json:2392-2410
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroup.redissecgroupDE8E7888
	File: /cdk.out/CdkProjectStack.template.json:2392-2410
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroup.redissecgroupDE8E7888
	File: /cdk.out/CdkProjectStack.template.json:2392-2410
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroup.redissecgroupDE8E7888
	File: /cdk.out/CdkProjectStack.template.json:2392-2410
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.redissecgroupfromCdkProjectStackVPCLambdaSG99F925FD63791E0078CB
	File: /cdk.out/CdkProjectStack.template.json:2411-2434
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.redissecgroupfromCdkProjectStackVPCLambdaSG99F925FD63791E0078CB
	File: /cdk.out/CdkProjectStack.template.json:2411-2434
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.redissecgroupfromCdkProjectStackVPCLambdaSG99F925FD63791E0078CB
	File: /cdk.out/CdkProjectStack.template.json:2411-2434
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.redissecgroupfromCdkProjectStackVPCLambdaSG99F925FD63791E0078CB
	File: /cdk.out/CdkProjectStack.template.json:2411-2434
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.vpclambdaServiceRole7B441480
	File: /cdk.out/CdkProjectStack.template.json:2489-2538
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.vpclambda3ABF6150
	File: /cdk.out/CdkProjectStack.template.json:2621-2735
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.vpclambda3ABF6150
	File: /cdk.out/CdkProjectStack.template.json:2621-2735
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	PASSED for resource: AWS::Lambda::Function.vpclambda3ABF6150
	File: /cdk.out/CdkProjectStack.template.json:2621-2735
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1
Check: CKV_AWS_20: "Ensure the S3 bucket does not allow READ permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone
Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20
Check: CKV_AWS_56: "Ensure S3 bucket has RestrictPublicBuckets enabled"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22
Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLs enabled"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19
Check: CKV_AWS_19: "Ensure the S3 bucket has server-side-encryption enabled"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV_AWS_57: "Ensure the S3 bucket does not allow WRITE permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	PASSED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21
Check: CKV_AWS_20: "Ensure the S3 bucket does not allow READ permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone
Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	PASSED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging
Check: CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
	PASSED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning
Check: CKV_AWS_19: "Ensure the S3 bucket has server-side-encryption enabled"
	PASSED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV_AWS_57: "Ensure the S3 bucket does not allow WRITE permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.lambdaEdgeFnServiceRole0612E129
	File: /cdk.out/CdkProjectStack.template.json:3302-3338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	PASSED for resource: AWS::Lambda::Function.lambdaEdgeFnB872F835
	File: /cdk.out/CdkProjectStack.template.json:3339-3364
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.lambdaEdgeFnB872F835
	File: /cdk.out/CdkProjectStack.template.json:3339-3364
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.lambdaEdgeFnB872F835
	File: /cdk.out/CdkProjectStack.template.json:3339-3364
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	PASSED for resource: AWS::CloudFront::Distribution.myDist9DB766F3
	File: /cdk.out/CdkProjectStack.template.json:3376-3536
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-27
Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	PASSED for resource: AWS::CloudFront::Distribution.myDist9DB766F3
	File: /cdk.out/CdkProjectStack.template.json:3376-3536
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-63
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroup.dbSG9714431E
	File: /cdk.out/CdkProjectStack.template.json:3557-3575
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroup.dbSG9714431E
	File: /cdk.out/CdkProjectStack.template.json:3557-3575
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroup.dbSG9714431E
	File: /cdk.out/CdkProjectStack.template.json:3557-3575
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroup.dbSG9714431E
	File: /cdk.out/CdkProjectStack.template.json:3557-3575
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.dbSGfromCdkProjectStackVPCLambdaSG99F925FD5432E2A13A55
	File: /cdk.out/CdkProjectStack.template.json:3576-3599
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.dbSGfromCdkProjectStackVPCLambdaSG99F925FD5432E2A13A55
	File: /cdk.out/CdkProjectStack.template.json:3576-3599
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.dbSGfromCdkProjectStackVPCLambdaSG99F925FD5432E2A13A55
	File: /cdk.out/CdkProjectStack.template.json:3576-3599
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.dbSGfromCdkProjectStackVPCLambdaSG99F925FD5432E2A13A55
	File: /cdk.out/CdkProjectStack.template.json:3576-3599
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	PASSED for resource: AWS::RDS::DBInstance.postgreDBC0BD1AA7
	File: /cdk.out/CdkProjectStack.template.json:3617-3672
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4
Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	PASSED for resource: AWS::RDS::DBInstance.postgreDBC0BD1AA7
	File: /cdk.out/CdkProjectStack.template.json:3617-3672
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-2
Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	PASSED for resource: AWS::RDS::DBInstance.postgreDBC0BD1AA7
	File: /cdk.out/CdkProjectStack.template.json:3617-3672
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.roleC7B7E775
	File: /cdk.out/CdkProjectStack.template.json:3679-3712
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.roleDefaultPolicy7C980EBA
	File: /cdk.out/CdkProjectStack.template.json:3713-3744
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.ecssqstaskdefinitionTaskRole8476BA6A
	File: /cdk.out/CdkProjectStack.template.json:3745-3764
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_97: "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions"
	PASSED for resource: AWS::ECS::TaskDefinition.ecssqstaskdefinition880BB5AE
	File: /cdk.out/CdkProjectStack.template.json:3793-3858
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-39
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroup.ecsservicefgSecurityGroup1093A5DD
	File: /cdk.out/CdkProjectStack.template.json:3918-3940
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroup.ecsservicefgSecurityGroup1093A5DD
	File: /cdk.out/CdkProjectStack.template.json:3918-3940
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroup.ecsservicefgSecurityGroup1093A5DD
	File: /cdk.out/CdkProjectStack.template.json:3918-3940
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroup.ecsservicefgSecurityGroup1093A5DD
	File: /cdk.out/CdkProjectStack.template.json:3918-3940
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.albecsexecutionrole199EA2EA
	File: /cdk.out/CdkProjectStack.template.json:3947-3980
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_62: "Ensure no IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.bridgecrew.io/docs/iam_47
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: AWS::IAM::Policy.albecsexecutionroleDefaultPolicyF6BD7534
	File: /cdk.out/CdkProjectStack.template.json:3981-4012
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.ecsalbtaskdefinitionTaskRole94797D7B
	File: /cdk.out/CdkProjectStack.template.json:4013-4032
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_97: "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions"
	PASSED for resource: AWS::ECS::TaskDefinition.ecsalbtaskdefinition5238D0E0
	File: /cdk.out/CdkProjectStack.template.json:4033-4083
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-39
Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	PASSED for resource: AWS::ElasticLoadBalancingV2::LoadBalancer.albecspatternLB32C840CA
	File: /cdk.out/CdkProjectStack.template.json:4092-4144
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternLBSecurityGroupF292F2E8
	File: /cdk.out/CdkProjectStack.template.json:4145-4165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternLBSecurityGroupF292F2E8
	File: /cdk.out/CdkProjectStack.template.json:4145-4165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternLBSecurityGroupF292F2E8
	File: /cdk.out/CdkProjectStack.template.json:4145-4165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroupEgress.albecspatternLBSecurityGrouptoCdkProjectStackalbecspatternServiceSecurityGroupBED86ED35000AA2BA5B3
	File: /cdk.out/CdkProjectStack.template.json:4166-4189
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternServiceSecurityGroup9BFD73F1
	File: /cdk.out/CdkProjectStack.template.json:4290-4311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternServiceSecurityGroup9BFD73F1
	File: /cdk.out/CdkProjectStack.template.json:4290-4311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternServiceSecurityGroup9BFD73F1
	File: /cdk.out/CdkProjectStack.template.json:4290-4311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroup.albecspatternServiceSecurityGroup9BFD73F1
	File: /cdk.out/CdkProjectStack.template.json:4290-4311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.albecspatternServiceSecurityGroupfromCdkProjectStackalbecspatternLBSecurityGroup45FB6B405000F7DC5B71
	File: /cdk.out/CdkProjectStack.template.json:4312-4338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.albecspatternServiceSecurityGroupfromCdkProjectStackalbecspatternLBSecurityGroup45FB6B405000F7DC5B71
	File: /cdk.out/CdkProjectStack.template.json:4312-4338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.albecspatternServiceSecurityGroupfromCdkProjectStackalbecspatternLBSecurityGroup45FB6B405000F7DC5B71
	File: /cdk.out/CdkProjectStack.template.json:4312-4338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: AWS::EC2::SecurityGroupIngress.albecspatternServiceSecurityGroupfromCdkProjectStackalbecspatternLBSecurityGroup45FB6B405000F7DC5B71
	File: /cdk.out/CdkProjectStack.template.json:4312-4338
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	PASSED for resource: AWS::CloudFront::Distribution.ALBDist3A9DA5B1
	File: /cdk.out/CdkProjectStack.template.json:4339-4395
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-27
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	PASSED for resource: AWS::Lambda::Permission.RuleAllowEventRuleCdkProjectStackvpclambda4D517754F66D7F8B
	File: /cdk.out/CdkProjectStack.template.json:4433-4454
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364
Check: CKV_AWS_26: "Ensure all data stored in the SNS topic is encrypted"
	PASSED for resource: AWS::SNS::Topic.CloudWatchAlarmTopicD12D7150
	File: /cdk.out/CdkProjectStack.template.json:4455-4464
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-15
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: AWS::IAM::Role.powertoolsfuncServiceRoleA9938733
	File: /cdk.out/CdkProjectStack.template.json:4538-4571
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	PASSED for resource: AWS::Lambda::Function.powertoolsfuncE1BDE604
	File: /cdk.out/CdkProjectStack.template.json:4572-4597
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: AWS::Lambda::Function.powertoolsfuncE1BDE604
	File: /cdk.out/CdkProjectStack.template.json:4572-4597
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in Lambda environment"
	PASSED for resource: AWS::Lambda::Function.powertoolsfuncE1BDE604
	File: /cdk.out/CdkProjectStack.template.json:4572-4597
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		3  |   "LambdaBucketConstructbucketlogs030031A5": {
		4  |    "Type": "AWS::S3::Bucket",
		5  |    "Properties": {
		6  |     "PublicAccessBlockConfiguration": {
		7  |      "BlockPublicAcls": true,
		8  |      "BlockPublicPolicy": true,
		9  |      "IgnorePublicAcls": true,
		10 |      "RestrictPublicBuckets": true
		11 |     },
		12 |     "Tags": [
		13 |      {
		14 |       "Key": "aws-cdk:auto-delete-objects",
		15 |       "Value": "true"
		16 |      }
		17 |     ]
		18 |    },
		19 |    "UpdateReplacePolicy": "Delete",
		20 |    "DeletionPolicy": "Delete",
		21 |    "Metadata": {
		22 |     "aws:cdk:path": "CdkProjectStack/LambdaBucketConstruct/bucket_logs/Resource"
		23 |    }
		24 |   },

Check: CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
	FAILED for resource: AWS::S3::Bucket.LambdaBucketConstructbucketlogs030031A5
	File: /cdk.out/CdkProjectStack.template.json:3-24
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		3  |   "LambdaBucketConstructbucketlogs030031A5": {
		4  |    "Type": "AWS::S3::Bucket",
		5  |    "Properties": {
		6  |     "PublicAccessBlockConfiguration": {
		7  |      "BlockPublicAcls": true,
		8  |      "BlockPublicPolicy": true,
		9  |      "IgnorePublicAcls": true,
		10 |      "RestrictPublicBuckets": true
		11 |     },
		12 |     "Tags": [
		13 |      {
		14 |       "Key": "aws-cdk:auto-delete-objects",
		15 |       "Value": "true"
		16 |      }
		17 |     ]
		18 |    },
		19 |    "UpdateReplacePolicy": "Delete",
		20 |    "DeletionPolicy": "Delete",
		21 |    "Metadata": {
		22 |     "aws:cdk:path": "CdkProjectStack/LambdaBucketConstruct/bucket_logs/Resource"
		23 |    }
		24 |   },

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.LambdaBucketConstructmyLambda4C094689
	File: /cdk.out/CdkProjectStack.template.json:462-495
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		462 |   "LambdaBucketConstructmyLambda4C094689": {
		463 |    "Type": "AWS::Lambda::Function",
		464 |    "Properties": {
		465 |     "Code": {
		466 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		467 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		468 |     },
		469 |     "Environment": {
		470 |      "Variables": {
		471 |       "BUCKET_NAME": {
		472 |        "Ref": "LambdaBucketConstructmyBucketC0199F5C"
		473 |       }
		474 |      }
		475 |     },
		476 |     "Handler": "lambda-bucket.handler",
		477 |     "Role": {
		478 |      "Fn::GetAtt": [
		479 |       "LambdaBucketConstructmyLambdaServiceRoleCE5F457F",
		480 |       "Arn"
		481 |      ]
		482 |     },
		483 |     "Runtime": "python3.9"
		484 |    },
		485 |    "DependsOn": [
		486 |     "LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740",
		487 |     "LambdaBucketConstructmyLambdaServiceRoleCE5F457F"
		488 |    ],
		489 |    "Metadata": {
		490 |     "aws:cdk:path": "CdkProjectStack/LambdaBucketConstruct/myLambda/Resource",
		491 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		492 |     "aws:asset:is-bundled": false,
		493 |     "aws:asset:property": "Code"
		494 |    }
		495 |   },

Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	FAILED for resource: AWS::Lambda::Function.LambdaBucketConstructmyLambda4C094689
	File: /cdk.out/CdkProjectStack.template.json:462-495
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5

		462 |   "LambdaBucketConstructmyLambda4C094689": {
		463 |    "Type": "AWS::Lambda::Function",
		464 |    "Properties": {
		465 |     "Code": {
		466 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		467 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		468 |     },
		469 |     "Environment": {
		470 |      "Variables": {
		471 |       "BUCKET_NAME": {
		472 |        "Ref": "LambdaBucketConstructmyBucketC0199F5C"
		473 |       }
		474 |      }
		475 |     },
		476 |     "Handler": "lambda-bucket.handler",
		477 |     "Role": {
		478 |      "Fn::GetAtt": [
		479 |       "LambdaBucketConstructmyLambdaServiceRoleCE5F457F",
		480 |       "Arn"
		481 |      ]
		482 |     },
		483 |     "Runtime": "python3.9"
		484 |    },
		485 |    "DependsOn": [
		486 |     "LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740",
		487 |     "LambdaBucketConstructmyLambdaServiceRoleCE5F457F"
		488 |    ],
		489 |    "Metadata": {
		490 |     "aws:cdk:path": "CdkProjectStack/LambdaBucketConstruct/myLambda/Resource",
		491 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		492 |     "aws:asset:is-bundled": false,
		493 |     "aws:asset:property": "Code"
		494 |    }
		495 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.LambdaBucketConstructmyLambda4C094689
	File: /cdk.out/CdkProjectStack.template.json:462-495
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		462 |   "LambdaBucketConstructmyLambda4C094689": {
		463 |    "Type": "AWS::Lambda::Function",
		464 |    "Properties": {
		465 |     "Code": {
		466 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		467 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		468 |     },
		469 |     "Environment": {
		470 |      "Variables": {
		471 |       "BUCKET_NAME": {
		472 |        "Ref": "LambdaBucketConstructmyBucketC0199F5C"
		473 |       }
		474 |      }
		475 |     },
		476 |     "Handler": "lambda-bucket.handler",
		477 |     "Role": {
		478 |      "Fn::GetAtt": [
		479 |       "LambdaBucketConstructmyLambdaServiceRoleCE5F457F",
		480 |       "Arn"
		481 |      ]
		482 |     },
		483 |     "Runtime": "python3.9"
		484 |    },
		485 |    "DependsOn": [
		486 |     "LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740",
		487 |     "LambdaBucketConstructmyLambdaServiceRoleCE5F457F"
		488 |    ],
		489 |    "Metadata": {
		490 |     "aws:cdk:path": "CdkProjectStack/LambdaBucketConstruct/myLambda/Resource",
		491 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		492 |     "aws:asset:is-bundled": false,
		493 |     "aws:asset:property": "Code"
		494 |    }
		495 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.LambdaBucketConstructmyLambda4C094689
	File: /cdk.out/CdkProjectStack.template.json:462-495
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		462 |   "LambdaBucketConstructmyLambda4C094689": {
		463 |    "Type": "AWS::Lambda::Function",
		464 |    "Properties": {
		465 |     "Code": {
		466 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		467 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		468 |     },
		469 |     "Environment": {
		470 |      "Variables": {
		471 |       "BUCKET_NAME": {
		472 |        "Ref": "LambdaBucketConstructmyBucketC0199F5C"
		473 |       }
		474 |      }
		475 |     },
		476 |     "Handler": "lambda-bucket.handler",
		477 |     "Role": {
		478 |      "Fn::GetAtt": [
		479 |       "LambdaBucketConstructmyLambdaServiceRoleCE5F457F",
		480 |       "Arn"
		481 |      ]
		482 |     },
		483 |     "Runtime": "python3.9"
		484 |    },
		485 |    "DependsOn": [
		486 |     "LambdaBucketConstructmyLambdaServiceRoleDefaultPolicy991D7740",
		487 |     "LambdaBucketConstructmyLambdaServiceRoleCE5F457F"
		488 |    ],
		489 |    "Metadata": {
		490 |     "aws:cdk:path": "CdkProjectStack/LambdaBucketConstruct/myLambda/Resource",
		491 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		492 |     "aws:asset:is-bundled": false,
		493 |     "aws:asset:property": "Code"
		494 |    }
		495 |   },

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
	File: /cdk.out/CdkProjectStack.template.json:521-559
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		521 |   "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
		522 |    "Type": "AWS::Lambda::Function",
		523 |    "Properties": {
		524 |     "Code": {
		525 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		526 |      "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
		527 |     },
		528 |     "Timeout": 900,
		529 |     "MemorySize": 128,
		530 |     "Handler": "index.handler",
		531 |     "Role": {
		532 |      "Fn::GetAtt": [
		533 |       "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
		534 |       "Arn"
		535 |      ]
		536 |     },
		537 |     "Runtime": "nodejs18.x",
		538 |     "Description": {
		539 |      "Fn::Join": [
		540 |       "",
		541 |       [
		542 |        "Lambda function for auto-deleting objects in ",
		543 |        {
		544 |         "Ref": "LambdaBucketConstructbucketlogs030031A5"
		545 |        },
		546 |        " S3 bucket."
		547 |       ]
		548 |      ]
		549 |     }
		550 |    },
		551 |    "DependsOn": [
		552 |     "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
		553 |    ],
		554 |    "Metadata": {
		555 |     "aws:cdk:path": "CdkProjectStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
		556 |     "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
		557 |     "aws:asset:property": "Code"
		558 |    }
		559 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
	File: /cdk.out/CdkProjectStack.template.json:521-559
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		521 |   "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
		522 |    "Type": "AWS::Lambda::Function",
		523 |    "Properties": {
		524 |     "Code": {
		525 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		526 |      "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
		527 |     },
		528 |     "Timeout": 900,
		529 |     "MemorySize": 128,
		530 |     "Handler": "index.handler",
		531 |     "Role": {
		532 |      "Fn::GetAtt": [
		533 |       "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
		534 |       "Arn"
		535 |      ]
		536 |     },
		537 |     "Runtime": "nodejs18.x",
		538 |     "Description": {
		539 |      "Fn::Join": [
		540 |       "",
		541 |       [
		542 |        "Lambda function for auto-deleting objects in ",
		543 |        {
		544 |         "Ref": "LambdaBucketConstructbucketlogs030031A5"
		545 |        },
		546 |        " S3 bucket."
		547 |       ]
		548 |      ]
		549 |     }
		550 |    },
		551 |    "DependsOn": [
		552 |     "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
		553 |    ],
		554 |    "Metadata": {
		555 |     "aws:cdk:path": "CdkProjectStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
		556 |     "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
		557 |     "aws:asset:property": "Code"
		558 |    }
		559 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
	File: /cdk.out/CdkProjectStack.template.json:521-559
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		521 |   "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
		522 |    "Type": "AWS::Lambda::Function",
		523 |    "Properties": {
		524 |     "Code": {
		525 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		526 |      "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
		527 |     },
		528 |     "Timeout": 900,
		529 |     "MemorySize": 128,
		530 |     "Handler": "index.handler",
		531 |     "Role": {
		532 |      "Fn::GetAtt": [
		533 |       "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
		534 |       "Arn"
		535 |      ]
		536 |     },
		537 |     "Runtime": "nodejs18.x",
		538 |     "Description": {
		539 |      "Fn::Join": [
		540 |       "",
		541 |       [
		542 |        "Lambda function for auto-deleting objects in ",
		543 |        {
		544 |         "Ref": "LambdaBucketConstructbucketlogs030031A5"
		545 |        },
		546 |        " S3 bucket."
		547 |       ]
		548 |      ]
		549 |     }
		550 |    },
		551 |    "DependsOn": [
		552 |     "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
		553 |    ],
		554 |    "Metadata": {
		555 |     "aws:cdk:path": "CdkProjectStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
		556 |     "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
		557 |     "aws:asset:property": "Code"
		558 |    }
		559 |   },

Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: AWS::IAM::Policy.BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
	File: /cdk.out/CdkProjectStack.template.json:594-617
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint

		594 |   "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
		595 |    "Type": "AWS::IAM::Policy",
		596 |    "Properties": {
		597 |     "PolicyDocument": {
		598 |      "Statement": [
		599 |       {
		600 |        "Action": "s3:PutBucketNotification",
		601 |        "Effect": "Allow",
		602 |        "Resource": "*"
		603 |       }
		604 |      ],
		605 |      "Version": "2012-10-17"
		606 |     },
		607 |     "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
		608 |     "Roles": [
		609 |      {
		610 |       "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
		611 |      }
		612 |     ]
		613 |    },
		614 |    "Metadata": {
		615 |     "aws:cdk:path": "CdkProjectStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
		616 |    }
		617 |   },

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
	File: /cdk.out/CdkProjectStack.template.json:618-642
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		618 |   "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
		619 |    "Type": "AWS::Lambda::Function",
		620 |    "Properties": {
		621 |     "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
		622 |     "Code": {
		623 |      "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def with_id(n):\n    n['Id'] = f\"{stack_id}-{hash(json.dumps(n, sort_keys=True))}\"\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        ids = [with_id(n) for n in old.get(t, [])]\n        old_incoming_ids = [n['Id'] for n in ids]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'] in old_incoming_ids]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
		624 |     },
		625 |     "Handler": "index.handler",
		626 |     "Role": {
		627 |      "Fn::GetAtt": [
		628 |       "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
		629 |       "Arn"
		630 |      ]
		631 |     },
		632 |     "Runtime": "python3.9",
		633 |     "Timeout": 300
		634 |    },
		635 |    "DependsOn": [
		636 |     "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
		637 |     "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
		638 |    ],
		639 |    "Metadata": {
		640 |     "aws:cdk:path": "CdkProjectStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
		641 |    }
		642 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
	File: /cdk.out/CdkProjectStack.template.json:618-642
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		618 |   "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
		619 |    "Type": "AWS::Lambda::Function",
		620 |    "Properties": {
		621 |     "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
		622 |     "Code": {
		623 |      "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def with_id(n):\n    n['Id'] = f\"{stack_id}-{hash(json.dumps(n, sort_keys=True))}\"\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        ids = [with_id(n) for n in old.get(t, [])]\n        old_incoming_ids = [n['Id'] for n in ids]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'] in old_incoming_ids]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
		624 |     },
		625 |     "Handler": "index.handler",
		626 |     "Role": {
		627 |      "Fn::GetAtt": [
		628 |       "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
		629 |       "Arn"
		630 |      ]
		631 |     },
		632 |     "Runtime": "python3.9",
		633 |     "Timeout": 300
		634 |    },
		635 |    "DependsOn": [
		636 |     "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
		637 |     "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
		638 |    ],
		639 |    "Metadata": {
		640 |     "aws:cdk:path": "CdkProjectStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
		641 |    }
		642 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
	File: /cdk.out/CdkProjectStack.template.json:618-642
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		618 |   "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
		619 |    "Type": "AWS::Lambda::Function",
		620 |    "Properties": {
		621 |     "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
		622 |     "Code": {
		623 |      "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def with_id(n):\n    n['Id'] = f\"{stack_id}-{hash(json.dumps(n, sort_keys=True))}\"\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        ids = [with_id(n) for n in old.get(t, [])]\n        old_incoming_ids = [n['Id'] for n in ids]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'] in old_incoming_ids]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
		624 |     },
		625 |     "Handler": "index.handler",
		626 |     "Role": {
		627 |      "Fn::GetAtt": [
		628 |       "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
		629 |       "Arn"
		630 |      ]
		631 |     },
		632 |     "Runtime": "python3.9",
		633 |     "Timeout": 300
		634 |    },
		635 |    "DependsOn": [
		636 |     "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
		637 |     "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
		638 |    ],
		639 |    "Metadata": {
		640 |     "aws:cdk:path": "CdkProjectStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
		641 |    }
		642 |   },

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
	File: /cdk.out/CdkProjectStack.template.json:765-802
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		765 |   "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
		766 |    "Type": "AWS::Lambda::Function",
		767 |    "Properties": {
		768 |     "Code": {
		769 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		770 |      "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
		771 |     },
		772 |     "Environment": {
		773 |      "Variables": {
		774 |       "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
		775 |      }
		776 |     },
		777 |     "Handler": "index.handler",
		778 |     "Layers": [
		779 |      {
		780 |       "Ref": "LambdaBucketConstructDeployBooksFileAwsCliLayer1FE6DC44"
		781 |      }
		782 |     ],
		783 |     "Role": {
		784 |      "Fn::GetAtt": [
		785 |       "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
		786 |       "Arn"
		787 |      ]
		788 |     },
		789 |     "Runtime": "python3.9",
		790 |     "Timeout": 900
		791 |    },
		792 |    "DependsOn": [
		793 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
		794 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
		795 |    ],
		796 |    "Metadata": {
		797 |     "aws:cdk:path": "CdkProjectStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
		798 |     "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
		799 |     "aws:asset:is-bundled": false,
		800 |     "aws:asset:property": "Code"
		801 |    }
		802 |   },

Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	FAILED for resource: AWS::Lambda::Function.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
	File: /cdk.out/CdkProjectStack.template.json:765-802
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5

		765 |   "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
		766 |    "Type": "AWS::Lambda::Function",
		767 |    "Properties": {
		768 |     "Code": {
		769 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		770 |      "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
		771 |     },
		772 |     "Environment": {
		773 |      "Variables": {
		774 |       "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
		775 |      }
		776 |     },
		777 |     "Handler": "index.handler",
		778 |     "Layers": [
		779 |      {
		780 |       "Ref": "LambdaBucketConstructDeployBooksFileAwsCliLayer1FE6DC44"
		781 |      }
		782 |     ],
		783 |     "Role": {
		784 |      "Fn::GetAtt": [
		785 |       "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
		786 |       "Arn"
		787 |      ]
		788 |     },
		789 |     "Runtime": "python3.9",
		790 |     "Timeout": 900
		791 |    },
		792 |    "DependsOn": [
		793 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
		794 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
		795 |    ],
		796 |    "Metadata": {
		797 |     "aws:cdk:path": "CdkProjectStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
		798 |     "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
		799 |     "aws:asset:is-bundled": false,
		800 |     "aws:asset:property": "Code"
		801 |    }
		802 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
	File: /cdk.out/CdkProjectStack.template.json:765-802
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		765 |   "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
		766 |    "Type": "AWS::Lambda::Function",
		767 |    "Properties": {
		768 |     "Code": {
		769 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		770 |      "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
		771 |     },
		772 |     "Environment": {
		773 |      "Variables": {
		774 |       "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
		775 |      }
		776 |     },
		777 |     "Handler": "index.handler",
		778 |     "Layers": [
		779 |      {
		780 |       "Ref": "LambdaBucketConstructDeployBooksFileAwsCliLayer1FE6DC44"
		781 |      }
		782 |     ],
		783 |     "Role": {
		784 |      "Fn::GetAtt": [
		785 |       "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
		786 |       "Arn"
		787 |      ]
		788 |     },
		789 |     "Runtime": "python3.9",
		790 |     "Timeout": 900
		791 |    },
		792 |    "DependsOn": [
		793 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
		794 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
		795 |    ],
		796 |    "Metadata": {
		797 |     "aws:cdk:path": "CdkProjectStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
		798 |     "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
		799 |     "aws:asset:is-bundled": false,
		800 |     "aws:asset:property": "Code"
		801 |    }
		802 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
	File: /cdk.out/CdkProjectStack.template.json:765-802
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		765 |   "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
		766 |    "Type": "AWS::Lambda::Function",
		767 |    "Properties": {
		768 |     "Code": {
		769 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		770 |      "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
		771 |     },
		772 |     "Environment": {
		773 |      "Variables": {
		774 |       "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
		775 |      }
		776 |     },
		777 |     "Handler": "index.handler",
		778 |     "Layers": [
		779 |      {
		780 |       "Ref": "LambdaBucketConstructDeployBooksFileAwsCliLayer1FE6DC44"
		781 |      }
		782 |     ],
		783 |     "Role": {
		784 |      "Fn::GetAtt": [
		785 |       "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
		786 |       "Arn"
		787 |      ]
		788 |     },
		789 |     "Runtime": "python3.9",
		790 |     "Timeout": 900
		791 |    },
		792 |    "DependsOn": [
		793 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
		794 |     "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
		795 |    ],
		796 |    "Metadata": {
		797 |     "aws:cdk:path": "CdkProjectStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
		798 |     "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
		799 |     "aws:asset:is-bundled": false,
		800 |     "aws:asset:property": "Code"
		801 |    }
		802 |   },

Check: CKV_AWS_119: "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK"
	FAILED for resource: AWS::DynamoDB::Table.LambdaDynamoDBConstructOrders2AADB327
	File: /cdk.out/CdkProjectStack.template.json:803-833
	Guide: https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted

		803 |   "LambdaDynamoDBConstructOrders2AADB327": {
		804 |    "Type": "AWS::DynamoDB::Table",
		805 |    "Properties": {
		806 |     "AttributeDefinitions": [
		807 |      {
		808 |       "AttributeName": "order_id",
		809 |       "AttributeType": "S"
		810 |      }
		811 |     ],
		812 |     "BillingMode": "PAY_PER_REQUEST",
		813 |     "DeletionProtectionEnabled": true,
		814 |     "KeySchema": [
		815 |      {
		816 |       "AttributeName": "order_id",
		817 |       "KeyType": "HASH"
		818 |      }
		819 |     ],
		820 |     "PointInTimeRecoverySpecification": {
		821 |      "PointInTimeRecoveryEnabled": true
		822 |     },
		823 |     "StreamSpecification": {
		824 |      "StreamViewType": "NEW_IMAGE"
		825 |     },
		826 |     "TableName": "orders"
		827 |    },
		828 |    "UpdateReplacePolicy": "Delete",
		829 |    "DeletionPolicy": "Delete",
		830 |    "Metadata": {
		831 |     "aws:cdk:path": "CdkProjectStack/LambdaDynamoDBConstruct/Orders/Resource"
		832 |    }
		833 |   },

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.LambdaDynamoDBConstructmyLambdaDDB794DC085
	File: /cdk.out/CdkProjectStack.template.json:915-948
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		915 |   "LambdaDynamoDBConstructmyLambdaDDB794DC085": {
		916 |    "Type": "AWS::Lambda::Function",
		917 |    "Properties": {
		918 |     "Code": {
		919 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		920 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		921 |     },
		922 |     "Environment": {
		923 |      "Variables": {
		924 |       "TABLE_NAME": {
		925 |        "Ref": "LambdaDynamoDBConstructOrders2AADB327"
		926 |       }
		927 |      }
		928 |     },
		929 |     "Handler": "lambda-dynamodb.handler",
		930 |     "Role": {
		931 |      "Fn::GetAtt": [
		932 |       "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64",
		933 |       "Arn"
		934 |      ]
		935 |     },
		936 |     "Runtime": "python3.9"
		937 |    },
		938 |    "DependsOn": [
		939 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F",
		940 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64"
		941 |    ],
		942 |    "Metadata": {
		943 |     "aws:cdk:path": "CdkProjectStack/LambdaDynamoDBConstruct/myLambdaDDB/Resource",
		944 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		945 |     "aws:asset:is-bundled": false,
		946 |     "aws:asset:property": "Code"
		947 |    }
		948 |   },

Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	FAILED for resource: AWS::Lambda::Function.LambdaDynamoDBConstructmyLambdaDDB794DC085
	File: /cdk.out/CdkProjectStack.template.json:915-948
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5

		915 |   "LambdaDynamoDBConstructmyLambdaDDB794DC085": {
		916 |    "Type": "AWS::Lambda::Function",
		917 |    "Properties": {
		918 |     "Code": {
		919 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		920 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		921 |     },
		922 |     "Environment": {
		923 |      "Variables": {
		924 |       "TABLE_NAME": {
		925 |        "Ref": "LambdaDynamoDBConstructOrders2AADB327"
		926 |       }
		927 |      }
		928 |     },
		929 |     "Handler": "lambda-dynamodb.handler",
		930 |     "Role": {
		931 |      "Fn::GetAtt": [
		932 |       "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64",
		933 |       "Arn"
		934 |      ]
		935 |     },
		936 |     "Runtime": "python3.9"
		937 |    },
		938 |    "DependsOn": [
		939 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F",
		940 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64"
		941 |    ],
		942 |    "Metadata": {
		943 |     "aws:cdk:path": "CdkProjectStack/LambdaDynamoDBConstruct/myLambdaDDB/Resource",
		944 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		945 |     "aws:asset:is-bundled": false,
		946 |     "aws:asset:property": "Code"
		947 |    }
		948 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.LambdaDynamoDBConstructmyLambdaDDB794DC085
	File: /cdk.out/CdkProjectStack.template.json:915-948
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		915 |   "LambdaDynamoDBConstructmyLambdaDDB794DC085": {
		916 |    "Type": "AWS::Lambda::Function",
		917 |    "Properties": {
		918 |     "Code": {
		919 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		920 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		921 |     },
		922 |     "Environment": {
		923 |      "Variables": {
		924 |       "TABLE_NAME": {
		925 |        "Ref": "LambdaDynamoDBConstructOrders2AADB327"
		926 |       }
		927 |      }
		928 |     },
		929 |     "Handler": "lambda-dynamodb.handler",
		930 |     "Role": {
		931 |      "Fn::GetAtt": [
		932 |       "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64",
		933 |       "Arn"
		934 |      ]
		935 |     },
		936 |     "Runtime": "python3.9"
		937 |    },
		938 |    "DependsOn": [
		939 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F",
		940 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64"
		941 |    ],
		942 |    "Metadata": {
		943 |     "aws:cdk:path": "CdkProjectStack/LambdaDynamoDBConstruct/myLambdaDDB/Resource",
		944 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		945 |     "aws:asset:is-bundled": false,
		946 |     "aws:asset:property": "Code"
		947 |    }
		948 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.LambdaDynamoDBConstructmyLambdaDDB794DC085
	File: /cdk.out/CdkProjectStack.template.json:915-948
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		915 |   "LambdaDynamoDBConstructmyLambdaDDB794DC085": {
		916 |    "Type": "AWS::Lambda::Function",
		917 |    "Properties": {
		918 |     "Code": {
		919 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		920 |      "S3Key": "774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650.zip"
		921 |     },
		922 |     "Environment": {
		923 |      "Variables": {
		924 |       "TABLE_NAME": {
		925 |        "Ref": "LambdaDynamoDBConstructOrders2AADB327"
		926 |       }
		927 |      }
		928 |     },
		929 |     "Handler": "lambda-dynamodb.handler",
		930 |     "Role": {
		931 |      "Fn::GetAtt": [
		932 |       "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64",
		933 |       "Arn"
		934 |      ]
		935 |     },
		936 |     "Runtime": "python3.9"
		937 |    },
		938 |    "DependsOn": [
		939 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleDefaultPolicy6853313F",
		940 |     "LambdaDynamoDBConstructmyLambdaDDBServiceRoleCE053B64"
		941 |    ],
		942 |    "Metadata": {
		943 |     "aws:cdk:path": "CdkProjectStack/LambdaDynamoDBConstruct/myLambdaDDB/Resource",
		944 |     "aws:asset:path": "asset.774b296828ce14b5d76b20a09d09b000fcd7ebb9c6ab54f6012a66e853682650",
		945 |     "aws:asset:is-bundled": false,
		946 |     "aws:asset:property": "Code"
		947 |    }
		948 |   },

Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: AWS::ApiGateway::Stage.EndpointDeploymentStageprodB78BEEA0
	File: /cdk.out/CdkProjectStack.template.json:1082-1096
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-api-gateway-caching-is-enabled

		1082 |   "EndpointDeploymentStageprodB78BEEA0": {
		1083 |    "Type": "AWS::ApiGateway::Stage",
		1084 |    "Properties": {
		1085 |     "DeploymentId": {
		1086 |      "Ref": "EndpointDeployment318525DA10b4b51e8a93b895458b862ae138e11d"
		1087 |     },
		1088 |     "RestApiId": {
		1089 |      "Ref": "EndpointEEF1FD8F"
		1090 |     },
		1091 |     "StageName": "prod"
		1092 |    },
		1093 |    "Metadata": {
		1094 |     "aws:cdk:path": "CdkProjectStack/Endpoint/DeploymentStage.prod/Resource"
		1095 |    }
		1096 |   },

Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: AWS::ApiGateway::Stage.EndpointDeploymentStageprodB78BEEA0
	File: /cdk.out/CdkProjectStack.template.json:1082-1096
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-17

		1082 |   "EndpointDeploymentStageprodB78BEEA0": {
		1083 |    "Type": "AWS::ApiGateway::Stage",
		1084 |    "Properties": {
		1085 |     "DeploymentId": {
		1086 |      "Ref": "EndpointDeployment318525DA10b4b51e8a93b895458b862ae138e11d"
		1087 |     },
		1088 |     "RestApiId": {
		1089 |      "Ref": "EndpointEEF1FD8F"
		1090 |     },
		1091 |     "StageName": "prod"
		1092 |    },
		1093 |    "Metadata": {
		1094 |     "aws:cdk:path": "CdkProjectStack/Endpoint/DeploymentStage.prod/Resource"
		1095 |    }
		1096 |   },

Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: AWS::ApiGateway::Stage.EndpointDeploymentStageprodB78BEEA0
	File: /cdk.out/CdkProjectStack.template.json:1082-1096
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-15

		1082 |   "EndpointDeploymentStageprodB78BEEA0": {
		1083 |    "Type": "AWS::ApiGateway::Stage",
		1084 |    "Properties": {
		1085 |     "DeploymentId": {
		1086 |      "Ref": "EndpointDeployment318525DA10b4b51e8a93b895458b862ae138e11d"
		1087 |     },
		1088 |     "RestApiId": {
		1089 |      "Ref": "EndpointEEF1FD8F"
		1090 |     },
		1091 |     "StageName": "prod"
		1092 |    },
		1093 |    "Metadata": {
		1094 |     "aws:cdk:path": "CdkProjectStack/Endpoint/DeploymentStage.prod/Resource"
		1095 |    }
		1096 |   },

Check: CKV_AWS_59: "Ensure there is no open access to back-end resources through API"
	FAILED for resource: AWS::ApiGateway::Method.EndpointbookprocPOST8C761DA4
	File: /cdk.out/CdkProjectStack.template.json:1356-1419
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-6-api-gateway-authorizer-set

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
	File: /cdk.out/CdkProjectStack.template.json:1888-1915
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		1888 |   "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
		1889 |    "Type": "AWS::Lambda::Function",
		1890 |    "Properties": {
		1891 |     "Code": {
		1892 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		1893 |      "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
		1894 |     },
		1895 |     "Timeout": 900,
		1896 |     "MemorySize": 128,
		1897 |     "Handler": "__entrypoint__.handler",
		1898 |     "Role": {
		1899 |      "Fn::GetAtt": [
		1900 |       "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
		1901 |       "Arn"
		1902 |      ]
		1903 |     },
		1904 |     "Runtime": "nodejs18.x",
		1905 |     "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
		1906 |    },
		1907 |    "DependsOn": [
		1908 |     "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
		1909 |    ],
		1910 |    "Metadata": {
		1911 |     "aws:cdk:path": "CdkProjectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
		1912 |     "aws:asset:path": "asset.dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e",
		1913 |     "aws:asset:property": "Code"
		1914 |    }
		1915 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
	File: /cdk.out/CdkProjectStack.template.json:1888-1915
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		1888 |   "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
		1889 |    "Type": "AWS::Lambda::Function",
		1890 |    "Properties": {
		1891 |     "Code": {
		1892 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		1893 |      "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
		1894 |     },
		1895 |     "Timeout": 900,
		1896 |     "MemorySize": 128,
		1897 |     "Handler": "__entrypoint__.handler",
		1898 |     "Role": {
		1899 |      "Fn::GetAtt": [
		1900 |       "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
		1901 |       "Arn"
		1902 |      ]
		1903 |     },
		1904 |     "Runtime": "nodejs18.x",
		1905 |     "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
		1906 |    },
		1907 |    "DependsOn": [
		1908 |     "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
		1909 |    ],
		1910 |    "Metadata": {
		1911 |     "aws:cdk:path": "CdkProjectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
		1912 |     "aws:asset:path": "asset.dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e",
		1913 |     "aws:asset:property": "Code"
		1914 |    }
		1915 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
	File: /cdk.out/CdkProjectStack.template.json:1888-1915
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		1888 |   "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
		1889 |    "Type": "AWS::Lambda::Function",
		1890 |    "Properties": {
		1891 |     "Code": {
		1892 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		1893 |      "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
		1894 |     },
		1895 |     "Timeout": 900,
		1896 |     "MemorySize": 128,
		1897 |     "Handler": "__entrypoint__.handler",
		1898 |     "Role": {
		1899 |      "Fn::GetAtt": [
		1900 |       "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
		1901 |       "Arn"
		1902 |      ]
		1903 |     },
		1904 |     "Runtime": "nodejs18.x",
		1905 |     "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
		1906 |    },
		1907 |    "DependsOn": [
		1908 |     "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
		1909 |    ],
		1910 |    "Metadata": {
		1911 |     "aws:cdk:path": "CdkProjectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
		1912 |     "aws:asset:path": "asset.dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e",
		1913 |     "aws:asset:property": "Code"
		1914 |    }
		1915 |   },

Check: CKV_AWS_149: "Ensure that Secrets Manager secret is encrypted using KMS CMK"
	FAILED for resource: AWS::SecretsManager::Secret.secret4DA88516
	File: /cdk.out/CdkProjectStack.template.json:2457-2473
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-secrets-manager-secret-is-encrypted-using-kms

		2457 |   "secret4DA88516": {
		2458 |    "Type": "AWS::SecretsManager::Secret",
		2459 |    "Properties": {
		2460 |     "GenerateSecretString": {
		2461 |      "ExcludeCharacters": "\"@/\\",
		2462 |      "ExcludePunctuation": true,
		2463 |      "GenerateStringKey": "password",
		2464 |      "IncludeSpace": false,
		2465 |      "SecretStringTemplate": "{\"username\": \"postgres\"}"
		2466 |     }
		2467 |    },
		2468 |    "UpdateReplacePolicy": "Delete",
		2469 |    "DeletionPolicy": "Delete",
		2470 |    "Metadata": {
		2471 |     "aws:cdk:path": "CdkProjectStack/secret/Resource"
		2472 |    }
		2473 |   },

Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	FAILED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	FAILED for resource: AWS::IAM::Policy.vpclambdaServiceRoleDefaultPolicyE95A1C8A
	File: /cdk.out/CdkProjectStack.template.json:2539-2620
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.vpclambda3ABF6150
	File: /cdk.out/CdkProjectStack.template.json:2621-2735
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_173: "Check encryption settings for Lambda environment variable"
	FAILED for resource: AWS::Lambda::Function.vpclambda3ABF6150
	File: /cdk.out/CdkProjectStack.template.json:2621-2735
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.vpclambda3ABF6150
	File: /cdk.out/CdkProjectStack.template.json:2621-2735
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	FAILED for resource: AWS::Lambda::Permission.vpclambdaInvoke1fBIBwkGKTIwSRmFV8O1yjU9AKdA1Znl7HToNrxfA1A8E98C6
	File: /cdk.out/CdkProjectStack.template.json:2759-2778
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364

		2759 |   "vpclambdaInvoke1fBIBwkGKTIwSRmFV8O1yjU9AKdA1Znl7HToNrxfA1A8E98C6": {
		2760 |    "Type": "AWS::Lambda::Permission",
		2761 |    "Properties": {
		2762 |     "Action": "lambda:InvokeFunction",
		2763 |     "FunctionName": {
		2764 |      "Fn::GetAtt": [
		2765 |       "vpclambda3ABF6150",
		2766 |       "Arn"
		2767 |      ]
		2768 |     },
		2769 |     "Principal": "events.amazonaws.com"
		2770 |    },
		2771 |    "DependsOn": [
		2772 |     "VPCprivateSubnet1RouteTableAssociation43FE0C59",
		2773 |     "VPCprivateSubnet2RouteTableAssociation45BBC356"
		2774 |    ],
		2775 |    "Metadata": {
		2776 |     "aws:cdk:path": "CdkProjectStack/vpc_lambda/Invoke1f--BIBwkGKTIwSRmFV8O1yjU9AK+dA1Znl7HToNrxfA="
		2777 |    }
		2778 |   },

Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		2779 |   "bucketlogscfBAE95067": {
		2780 |    "Type": "AWS::S3::Bucket",
		2781 |    "Properties": {
		2782 |     "AccessControl": "BucketOwnerFullControl",
		2783 |     "PublicAccessBlockConfiguration": {
		2784 |      "BlockPublicAcls": true,
		2785 |      "BlockPublicPolicy": true,
		2786 |      "IgnorePublicAcls": true,
		2787 |      "RestrictPublicBuckets": true
		2788 |     },
		2789 |     "Tags": [
		2790 |      {
		2791 |       "Key": "aws-cdk:auto-delete-objects",
		2792 |       "Value": "true"
		2793 |      }
		2794 |     ]
		2795 |    },
		2796 |    "UpdateReplacePolicy": "Delete",
		2797 |    "DeletionPolicy": "Delete",
		2798 |    "Metadata": {
		2799 |     "aws:cdk:path": "CdkProjectStack/bucket_logs_cf/Resource"
		2800 |    }
		2801 |   },

Check: CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
	FAILED for resource: AWS::S3::Bucket.bucketlogscfBAE95067
	File: /cdk.out/CdkProjectStack.template.json:2779-2801
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		2779 |   "bucketlogscfBAE95067": {
		2780 |    "Type": "AWS::S3::Bucket",
		2781 |    "Properties": {
		2782 |     "AccessControl": "BucketOwnerFullControl",
		2783 |     "PublicAccessBlockConfiguration": {
		2784 |      "BlockPublicAcls": true,
		2785 |      "BlockPublicPolicy": true,
		2786 |      "IgnorePublicAcls": true,
		2787 |      "RestrictPublicBuckets": true
		2788 |     },
		2789 |     "Tags": [
		2790 |      {
		2791 |       "Key": "aws-cdk:auto-delete-objects",
		2792 |       "Value": "true"
		2793 |      }
		2794 |     ]
		2795 |    },
		2796 |    "UpdateReplacePolicy": "Delete",
		2797 |    "DeletionPolicy": "Delete",
		2798 |    "Metadata": {
		2799 |     "aws:cdk:path": "CdkProjectStack/bucket_logs_cf/Resource"
		2800 |    }
		2801 |   },

Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	FAILED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20

		3007 |   "cfBucket8524B860": {
		3008 |    "Type": "AWS::S3::Bucket",
		3009 |    "Properties": {
		3010 |     "AccessControl": "Private",
		3011 |     "LoggingConfiguration": {
		3012 |      "DestinationBucketName": {
		3013 |       "Ref": "bucketlogscfBAE95067"
		3014 |      }
		3015 |     },
		3016 |     "Tags": [
		3017 |      {
		3018 |       "Key": "aws-cdk:auto-delete-objects",
		3019 |       "Value": "true"
		3020 |      },
		3021 |      {
		3022 |       "Key": "aws-cdk:cr-owned:565a021c",
		3023 |       "Value": "true"
		3024 |      }
		3025 |     ],
		3026 |     "VersioningConfiguration": {
		3027 |      "Status": "Enabled"
		3028 |     }
		3029 |    },
		3030 |    "UpdateReplacePolicy": "Delete",
		3031 |    "DeletionPolicy": "Delete",
		3032 |    "Metadata": {
		3033 |     "aws:cdk:path": "CdkProjectStack/cfBucket/Resource"
		3034 |    }
		3035 |   },

Check: CKV_AWS_56: "Ensure S3 bucket has RestrictPublicBuckets enabled"
	FAILED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22

		3007 |   "cfBucket8524B860": {
		3008 |    "Type": "AWS::S3::Bucket",
		3009 |    "Properties": {
		3010 |     "AccessControl": "Private",
		3011 |     "LoggingConfiguration": {
		3012 |      "DestinationBucketName": {
		3013 |       "Ref": "bucketlogscfBAE95067"
		3014 |      }
		3015 |     },
		3016 |     "Tags": [
		3017 |      {
		3018 |       "Key": "aws-cdk:auto-delete-objects",
		3019 |       "Value": "true"
		3020 |      },
		3021 |      {
		3022 |       "Key": "aws-cdk:cr-owned:565a021c",
		3023 |       "Value": "true"
		3024 |      }
		3025 |     ],
		3026 |     "VersioningConfiguration": {
		3027 |      "Status": "Enabled"
		3028 |     }
		3029 |    },
		3030 |    "UpdateReplacePolicy": "Delete",
		3031 |    "DeletionPolicy": "Delete",
		3032 |    "Metadata": {
		3033 |     "aws:cdk:path": "CdkProjectStack/cfBucket/Resource"
		3034 |    }
		3035 |   },

Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLs enabled"
	FAILED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19

		3007 |   "cfBucket8524B860": {
		3008 |    "Type": "AWS::S3::Bucket",
		3009 |    "Properties": {
		3010 |     "AccessControl": "Private",
		3011 |     "LoggingConfiguration": {
		3012 |      "DestinationBucketName": {
		3013 |       "Ref": "bucketlogscfBAE95067"
		3014 |      }
		3015 |     },
		3016 |     "Tags": [
		3017 |      {
		3018 |       "Key": "aws-cdk:auto-delete-objects",
		3019 |       "Value": "true"
		3020 |      },
		3021 |      {
		3022 |       "Key": "aws-cdk:cr-owned:565a021c",
		3023 |       "Value": "true"
		3024 |      }
		3025 |     ],
		3026 |     "VersioningConfiguration": {
		3027 |      "Status": "Enabled"
		3028 |     }
		3029 |    },
		3030 |    "UpdateReplacePolicy": "Delete",
		3031 |    "DeletionPolicy": "Delete",
		3032 |    "Metadata": {
		3033 |     "aws:cdk:path": "CdkProjectStack/cfBucket/Resource"
		3034 |    }
		3035 |   },

Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	FAILED for resource: AWS::S3::Bucket.cfBucket8524B860
	File: /cdk.out/CdkProjectStack.template.json:3007-3035
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21

		3007 |   "cfBucket8524B860": {
		3008 |    "Type": "AWS::S3::Bucket",
		3009 |    "Properties": {
		3010 |     "AccessControl": "Private",
		3011 |     "LoggingConfiguration": {
		3012 |      "DestinationBucketName": {
		3013 |       "Ref": "bucketlogscfBAE95067"
		3014 |      }
		3015 |     },
		3016 |     "Tags": [
		3017 |      {
		3018 |       "Key": "aws-cdk:auto-delete-objects",
		3019 |       "Value": "true"
		3020 |      },
		3021 |      {
		3022 |       "Key": "aws-cdk:cr-owned:565a021c",
		3023 |       "Value": "true"
		3024 |      }
		3025 |     ],
		3026 |     "VersioningConfiguration": {
		3027 |      "Status": "Enabled"
		3028 |     }
		3029 |    },
		3030 |    "UpdateReplacePolicy": "Delete",
		3031 |    "DeletionPolicy": "Delete",
		3032 |    "Metadata": {
		3033 |     "aws:cdk:path": "CdkProjectStack/cfBucket/Resource"
		3034 |    }
		3035 |   },

Check: CKV_AWS_192: "Ensure WAF prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell"
	FAILED for resource: AWS::WAFv2::WebACL.CFWAF
	File: /cdk.out/CdkProjectStack.template.json:3265-3301
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-waf-prevents-message-lookup-in-log4j2

		3265 |   "CFWAF": {
		3266 |    "Type": "AWS::WAFv2::WebACL",
		3267 |    "Properties": {
		3268 |     "DefaultAction": {
		3269 |      "Allow": {}
		3270 |     },
		3271 |     "Rules": [
		3272 |      {
		3273 |       "Name": "AWS-AWSManagedRulesCommonRuleSet",
		3274 |       "OverrideAction": {
		3275 |        "None": {}
		3276 |       },
		3277 |       "Priority": 1,
		3278 |       "Statement": {
		3279 |        "ManagedRuleGroupStatement": {
		3280 |         "Name": "AWSManagedRulesCommonRuleSet",
		3281 |         "VendorName": "AWS"
		3282 |        }
		3283 |       },
		3284 |       "VisibilityConfig": {
		3285 |        "CloudWatchMetricsEnabled": true,
		3286 |        "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
		3287 |        "SampledRequestsEnabled": true
		3288 |       }
		3289 |      }
		3290 |     ],
		3291 |     "Scope": "CLOUDFRONT",
		3292 |     "VisibilityConfig": {
		3293 |      "CloudWatchMetricsEnabled": true,
		3294 |      "MetricName": "WAF",
		3295 |      "SampledRequestsEnabled": true
		3296 |     }
		3297 |    },
		3298 |    "Metadata": {
		3299 |     "aws:cdk:path": "CdkProjectStack/CFWAF"
		3300 |    }
		3301 |   },

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.lambdaEdgeFnB872F835
	File: /cdk.out/CdkProjectStack.template.json:3339-3364
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		3339 |   "lambdaEdgeFnB872F835": {
		3340 |    "Type": "AWS::Lambda::Function",
		3341 |    "Properties": {
		3342 |     "Code": {
		3343 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		3344 |      "S3Key": "dfe0a27806bb4e7f3023a6464528e5566a0dfd888590429c2d878ec4397c87f8.zip"
		3345 |     },
		3346 |     "Handler": "lambda_edge.handler",
		3347 |     "Role": {
		3348 |      "Fn::GetAtt": [
		3349 |       "lambdaEdgeFnServiceRole0612E129",
		3350 |       "Arn"
		3351 |      ]
		3352 |     },
		3353 |     "Runtime": "python3.9"
		3354 |    },
		3355 |    "DependsOn": [
		3356 |     "lambdaEdgeFnServiceRole0612E129"
		3357 |    ],
		3358 |    "Metadata": {
		3359 |     "aws:cdk:path": "CdkProjectStack/lambdaEdge/Fn/Resource",
		3360 |     "aws:asset:path": "asset.dfe0a27806bb4e7f3023a6464528e5566a0dfd888590429c2d878ec4397c87f8",
		3361 |     "aws:asset:is-bundled": false,
		3362 |     "aws:asset:property": "Code"
		3363 |    }
		3364 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.lambdaEdgeFnB872F835
	File: /cdk.out/CdkProjectStack.template.json:3339-3364
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		3339 |   "lambdaEdgeFnB872F835": {
		3340 |    "Type": "AWS::Lambda::Function",
		3341 |    "Properties": {
		3342 |     "Code": {
		3343 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		3344 |      "S3Key": "dfe0a27806bb4e7f3023a6464528e5566a0dfd888590429c2d878ec4397c87f8.zip"
		3345 |     },
		3346 |     "Handler": "lambda_edge.handler",
		3347 |     "Role": {
		3348 |      "Fn::GetAtt": [
		3349 |       "lambdaEdgeFnServiceRole0612E129",
		3350 |       "Arn"
		3351 |      ]
		3352 |     },
		3353 |     "Runtime": "python3.9"
		3354 |    },
		3355 |    "DependsOn": [
		3356 |     "lambdaEdgeFnServiceRole0612E129"
		3357 |    ],
		3358 |    "Metadata": {
		3359 |     "aws:cdk:path": "CdkProjectStack/lambdaEdge/Fn/Resource",
		3360 |     "aws:asset:path": "asset.dfe0a27806bb4e7f3023a6464528e5566a0dfd888590429c2d878ec4397c87f8",
		3361 |     "aws:asset:is-bundled": false,
		3362 |     "aws:asset:property": "Code"
		3363 |    }
		3364 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.lambdaEdgeFnB872F835
	File: /cdk.out/CdkProjectStack.template.json:3339-3364
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		3339 |   "lambdaEdgeFnB872F835": {
		3340 |    "Type": "AWS::Lambda::Function",
		3341 |    "Properties": {
		3342 |     "Code": {
		3343 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		3344 |      "S3Key": "dfe0a27806bb4e7f3023a6464528e5566a0dfd888590429c2d878ec4397c87f8.zip"
		3345 |     },
		3346 |     "Handler": "lambda_edge.handler",
		3347 |     "Role": {
		3348 |      "Fn::GetAtt": [
		3349 |       "lambdaEdgeFnServiceRole0612E129",
		3350 |       "Arn"
		3351 |      ]
		3352 |     },
		3353 |     "Runtime": "python3.9"
		3354 |    },
		3355 |    "DependsOn": [
		3356 |     "lambdaEdgeFnServiceRole0612E129"
		3357 |    ],
		3358 |    "Metadata": {
		3359 |     "aws:cdk:path": "CdkProjectStack/lambdaEdge/Fn/Resource",
		3360 |     "aws:asset:path": "asset.dfe0a27806bb4e7f3023a6464528e5566a0dfd888590429c2d878ec4397c87f8",
		3361 |     "aws:asset:is-bundled": false,
		3362 |     "aws:asset:property": "Code"
		3363 |    }
		3364 |   },

Check: CKV_AWS_86: "Ensure CloudFront Distribution has Access Logging enabled"
	FAILED for resource: AWS::CloudFront::Distribution.myDist9DB766F3
	File: /cdk.out/CdkProjectStack.template.json:3376-3536
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-20

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_34: "Ensure CloudFront Distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: AWS::CloudFront::Distribution.myDist9DB766F3
	File: /cdk.out/CdkProjectStack.template.json:3376-3536
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-32

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: AWS::RDS::DBInstance.postgreDBC0BD1AA7
	File: /cdk.out/CdkProjectStack.template.json:3617-3672
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: AWS::RDS::DBInstance.postgreDBC0BD1AA7
	File: /cdk.out/CdkProjectStack.template.json:3617-3672
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_65: "Ensure container insights are enabled on ECS cluster"
	FAILED for resource: AWS::ECS::Cluster.ecssqscluster9B1A1898
	File: /cdk.out/CdkProjectStack.template.json:3673-3678
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-11

		3673 |   "ecssqscluster9B1A1898": {
		3674 |    "Type": "AWS::ECS::Cluster",
		3675 |    "Metadata": {
		3676 |     "aws:cdk:path": "CdkProjectStack/ecs_sqs_cluster/Resource"
		3677 |    }
		3678 |   },

Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint

		3765 |   "ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608": {
		3766 |    "Type": "AWS::IAM::Policy",
		3767 |    "Properties": {
		3768 |     "PolicyDocument": {
		3769 |      "Statement": [
		3770 |       {
		3771 |        "Action": [
		3772 |         "comprehend:*",
		3773 |         "dynamodb:*",
		3774 |         "sqs:*"
		3775 |        ],
		3776 |        "Effect": "Allow",
		3777 |        "Resource": "*"
		3778 |       }
		3779 |      ],
		3780 |      "Version": "2012-10-17"
		3781 |     },
		3782 |     "PolicyName": "ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608",
		3783 |     "Roles": [
		3784 |      {
		3785 |       "Ref": "ecssqstaskdefinitionTaskRole8476BA6A"
		3786 |      }
		3787 |     ]
		3788 |    },
		3789 |    "Metadata": {
		3790 |     "aws:cdk:path": "CdkProjectStack/ecs_sqs_task_definition/TaskRole/DefaultPolicy/Resource"
		3791 |    }
		3792 |   },

Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management without constraints"
	FAILED for resource: AWS::IAM::Policy.ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608
	File: /cdk.out/CdkProjectStack.template.json:3765-3792
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint

		3765 |   "ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608": {
		3766 |    "Type": "AWS::IAM::Policy",
		3767 |    "Properties": {
		3768 |     "PolicyDocument": {
		3769 |      "Statement": [
		3770 |       {
		3771 |        "Action": [
		3772 |         "comprehend:*",
		3773 |         "dynamodb:*",
		3774 |         "sqs:*"
		3775 |        ],
		3776 |        "Effect": "Allow",
		3777 |        "Resource": "*"
		3778 |       }
		3779 |      ],
		3780 |      "Version": "2012-10-17"
		3781 |     },
		3782 |     "PolicyName": "ecssqstaskdefinitionTaskRoleDefaultPolicyD273D608",
		3783 |     "Roles": [
		3784 |      {
		3785 |       "Ref": "ecssqstaskdefinitionTaskRole8476BA6A"
		3786 |      }
		3787 |     ]
		3788 |    },
		3789 |    "Metadata": {
		3790 |     "aws:cdk:path": "CdkProjectStack/ecs_sqs_task_definition/TaskRole/DefaultPolicy/Resource"
		3791 |    }
		3792 |   },

Check: CKV_AWS_158: "Ensure that CloudWatch Log Group is encrypted by KMS"
	FAILED for resource: AWS::Logs::LogGroup.ecssqstaskdefinitionecssqscontainerLogGroup862B7735
	File: /cdk.out/CdkProjectStack.template.json:3859-3866
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms

		3859 |   "ecssqstaskdefinitionecssqscontainerLogGroup862B7735": {
		3860 |    "Type": "AWS::Logs::LogGroup",
		3861 |    "UpdateReplacePolicy": "Retain",
		3862 |    "DeletionPolicy": "Retain",
		3863 |    "Metadata": {
		3864 |     "aws:cdk:path": "CdkProjectStack/ecs_sqs_task_definition/ecs_sqs_container/LogGroup/Resource"
		3865 |    }
		3866 |   },

Check: CKV_AWS_66: "Ensure that CloudWatch Log Group specifies retention days"
	FAILED for resource: AWS::Logs::LogGroup.ecssqstaskdefinitionecssqscontainerLogGroup862B7735
	File: /cdk.out/CdkProjectStack.template.json:3859-3866
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-13

		3859 |   "ecssqstaskdefinitionecssqscontainerLogGroup862B7735": {
		3860 |    "Type": "AWS::Logs::LogGroup",
		3861 |    "UpdateReplacePolicy": "Retain",
		3862 |    "DeletionPolicy": "Retain",
		3863 |    "Metadata": {
		3864 |     "aws:cdk:path": "CdkProjectStack/ecs_sqs_task_definition/ecs_sqs_container/LogGroup/Resource"
		3865 |    }
		3866 |   },

Check: CKV_AWS_65: "Ensure container insights are enabled on ECS cluster"
	FAILED for resource: AWS::ECS::Cluster.albclusterE0631BB7
	File: /cdk.out/CdkProjectStack.template.json:3941-3946
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-11

		3941 |   "albclusterE0631BB7": {
		3942 |    "Type": "AWS::ECS::Cluster",
		3943 |    "Metadata": {
		3944 |     "aws:cdk:path": "CdkProjectStack/alb_cluster/Resource"
		3945 |    }
		3946 |   },

Check: CKV_AWS_158: "Ensure that CloudWatch Log Group is encrypted by KMS"
	FAILED for resource: AWS::Logs::LogGroup.ecsalbtaskdefinitionecsalbcontainerLogGroup84F58BE0
	File: /cdk.out/CdkProjectStack.template.json:4084-4091
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms

		4084 |   "ecsalbtaskdefinitionecsalbcontainerLogGroup84F58BE0": {
		4085 |    "Type": "AWS::Logs::LogGroup",
		4086 |    "UpdateReplacePolicy": "Retain",
		4087 |    "DeletionPolicy": "Retain",
		4088 |    "Metadata": {
		4089 |     "aws:cdk:path": "CdkProjectStack/ecs_alb_task_definition/ecs_alb_container/LogGroup/Resource"
		4090 |    }
		4091 |   },

Check: CKV_AWS_66: "Ensure that CloudWatch Log Group specifies retention days"
	FAILED for resource: AWS::Logs::LogGroup.ecsalbtaskdefinitionecsalbcontainerLogGroup84F58BE0
	File: /cdk.out/CdkProjectStack.template.json:4084-4091
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-13

		4084 |   "ecsalbtaskdefinitionecsalbcontainerLogGroup84F58BE0": {
		4085 |    "Type": "AWS::Logs::LogGroup",
		4086 |    "UpdateReplacePolicy": "Retain",
		4087 |    "DeletionPolicy": "Retain",
		4088 |    "Metadata": {
		4089 |     "aws:cdk:path": "CdkProjectStack/ecs_alb_task_definition/ecs_alb_container/LogGroup/Resource"
		4090 |    }
		4091 |   },

Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: AWS::ElasticLoadBalancingV2::LoadBalancer.albecspatternLB32C840CA
	File: /cdk.out/CdkProjectStack.template.json:4092-4144
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	FAILED for resource: AWS::EC2::SecurityGroup.albecspatternLBSecurityGroupF292F2E8
	File: /cdk.out/CdkProjectStack.template.json:4145-4165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		4145 |   "albecspatternLBSecurityGroupF292F2E8": {
		4146 |    "Type": "AWS::EC2::SecurityGroup",
		4147 |    "Properties": {
		4148 |     "GroupDescription": "Automatically created Security Group for ELB CdkProjectStackalbecspatternLB798ACAB7",
		4149 |     "SecurityGroupIngress": [
		4150 |      {
		4151 |       "CidrIp": "0.0.0.0/0",
		4152 |       "Description": "Allow from anyone on port 80",
		4153 |       "FromPort": 80,
		4154 |       "IpProtocol": "tcp",
		4155 |       "ToPort": 80
		4156 |      }
		4157 |     ],
		4158 |     "VpcId": {
		4159 |      "Ref": "VPC2C1F0E711"
		4160 |     }
		4161 |    },
		4162 |    "Metadata": {
		4163 |     "aws:cdk:path": "CdkProjectStack/alb_ecs_pattern/LB/SecurityGroup/Resource"
		4164 |    }
		4165 |   },

Check: CKV_AWS_103: "Ensure that Load Balancer Listener is using at least TLS v1.2"
	FAILED for resource: AWS::ElasticLoadBalancingV2::Listener.albecspatternLBPublicListener7630A0A4
	File: /cdk.out/CdkProjectStack.template.json:4190-4210
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-43

		4190 |   "albecspatternLBPublicListener7630A0A4": {
		4191 |    "Type": "AWS::ElasticLoadBalancingV2::Listener",
		4192 |    "Properties": {
		4193 |     "DefaultActions": [
		4194 |      {
		4195 |       "TargetGroupArn": {
		4196 |        "Ref": "albecspatternLBPublicListenerECSGroupAFCEB88E"
		4197 |       },
		4198 |       "Type": "forward"
		4199 |      }
		4200 |     ],
		4201 |     "LoadBalancerArn": {
		4202 |      "Ref": "albecspatternLB32C840CA"
		4203 |     },
		4204 |     "Port": 80,
		4205 |     "Protocol": "HTTP"
		4206 |    },
		4207 |    "Metadata": {
		4208 |     "aws:cdk:path": "CdkProjectStack/alb_ecs_pattern/LB/PublicListener/Resource"
		4209 |    }
		4210 |   },

Check: CKV_AWS_2: "Ensure ALB protocol is HTTPS"
	FAILED for resource: AWS::ElasticLoadBalancingV2::Listener.albecspatternLBPublicListener7630A0A4
	File: /cdk.out/CdkProjectStack.template.json:4190-4210
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29

		4190 |   "albecspatternLBPublicListener7630A0A4": {
		4191 |    "Type": "AWS::ElasticLoadBalancingV2::Listener",
		4192 |    "Properties": {
		4193 |     "DefaultActions": [
		4194 |      {
		4195 |       "TargetGroupArn": {
		4196 |        "Ref": "albecspatternLBPublicListenerECSGroupAFCEB88E"
		4197 |       },
		4198 |       "Type": "forward"
		4199 |      }
		4200 |     ],
		4201 |     "LoadBalancerArn": {
		4202 |      "Ref": "albecspatternLB32C840CA"
		4203 |     },
		4204 |     "Port": 80,
		4205 |     "Protocol": "HTTP"
		4206 |    },
		4207 |    "Metadata": {
		4208 |     "aws:cdk:path": "CdkProjectStack/alb_ecs_pattern/LB/PublicListener/Resource"
		4209 |    }
		4210 |   },

Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: AWS::CloudFront::Distribution.ALBDist3A9DA5B1
	File: /cdk.out/CdkProjectStack.template.json:4339-4395
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-63

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_86: "Ensure CloudFront Distribution has Access Logging enabled"
	FAILED for resource: AWS::CloudFront::Distribution.ALBDist3A9DA5B1
	File: /cdk.out/CdkProjectStack.template.json:4339-4395
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-20

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_34: "Ensure CloudFront Distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: AWS::CloudFront::Distribution.ALBDist3A9DA5B1
	File: /cdk.out/CdkProjectStack.template.json:4339-4395
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-32

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: AWS::Lambda::Function.powertoolsfuncE1BDE604
	File: /cdk.out/CdkProjectStack.template.json:4572-4597
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		4572 |   "powertoolsfuncE1BDE604": {
		4573 |    "Type": "AWS::Lambda::Function",
		4574 |    "Properties": {
		4575 |     "Code": {
		4576 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		4577 |      "S3Key": "65e1e626af95a7a8744779e08bb7585da494fda00c8d90abfaadfc4dd9448cfb.zip"
		4578 |     },
		4579 |     "Handler": "lambda_power_tools.handler",
		4580 |     "Role": {
		4581 |      "Fn::GetAtt": [
		4582 |       "powertoolsfuncServiceRoleA9938733",
		4583 |       "Arn"
		4584 |      ]
		4585 |     },
		4586 |     "Runtime": "python3.9"
		4587 |    },
		4588 |    "DependsOn": [
		4589 |     "powertoolsfuncServiceRoleA9938733"
		4590 |    ],
		4591 |    "Metadata": {
		4592 |     "aws:cdk:path": "CdkProjectStack/power_tools_func/Resource",
		4593 |     "aws:asset:path": "asset.65e1e626af95a7a8744779e08bb7585da494fda00c8d90abfaadfc4dd9448cfb",
		4594 |     "aws:asset:is-bundled": false,
		4595 |     "aws:asset:property": "Code"
		4596 |    }
		4597 |   },

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: AWS::Lambda::Function.powertoolsfuncE1BDE604
	File: /cdk.out/CdkProjectStack.template.json:4572-4597
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		4572 |   "powertoolsfuncE1BDE604": {
		4573 |    "Type": "AWS::Lambda::Function",
		4574 |    "Properties": {
		4575 |     "Code": {
		4576 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		4577 |      "S3Key": "65e1e626af95a7a8744779e08bb7585da494fda00c8d90abfaadfc4dd9448cfb.zip"
		4578 |     },
		4579 |     "Handler": "lambda_power_tools.handler",
		4580 |     "Role": {
		4581 |      "Fn::GetAtt": [
		4582 |       "powertoolsfuncServiceRoleA9938733",
		4583 |       "Arn"
		4584 |      ]
		4585 |     },
		4586 |     "Runtime": "python3.9"
		4587 |    },
		4588 |    "DependsOn": [
		4589 |     "powertoolsfuncServiceRoleA9938733"
		4590 |    ],
		4591 |    "Metadata": {
		4592 |     "aws:cdk:path": "CdkProjectStack/power_tools_func/Resource",
		4593 |     "aws:asset:path": "asset.65e1e626af95a7a8744779e08bb7585da494fda00c8d90abfaadfc4dd9448cfb",
		4594 |     "aws:asset:is-bundled": false,
		4595 |     "aws:asset:property": "Code"
		4596 |    }
		4597 |   },

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: AWS::Lambda::Function.powertoolsfuncE1BDE604
	File: /cdk.out/CdkProjectStack.template.json:4572-4597
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		4572 |   "powertoolsfuncE1BDE604": {
		4573 |    "Type": "AWS::Lambda::Function",
		4574 |    "Properties": {
		4575 |     "Code": {
		4576 |      "S3Bucket": "cdk-hnb659fds-assets-095186745110-us-east-1",
		4577 |      "S3Key": "65e1e626af95a7a8744779e08bb7585da494fda00c8d90abfaadfc4dd9448cfb.zip"
		4578 |     },
		4579 |     "Handler": "lambda_power_tools.handler",
		4580 |     "Role": {
		4581 |      "Fn::GetAtt": [
		4582 |       "powertoolsfuncServiceRoleA9938733",
		4583 |       "Arn"
		4584 |      ]
		4585 |     },
		4586 |     "Runtime": "python3.9"
		4587 |    },
		4588 |    "DependsOn": [
		4589 |     "powertoolsfuncServiceRoleA9938733"
		4590 |    ],
		4591 |    "Metadata": {
		4592 |     "aws:cdk:path": "CdkProjectStack/power_tools_func/Resource",
		4593 |     "aws:asset:path": "asset.65e1e626af95a7a8744779e08bb7585da494fda00c8d90abfaadfc4dd9448cfb",
		4594 |     "aws:asset:is-bundled": false,
		4595 |     "aws:asset:property": "Code"
		4596 |    }
		4597 |   },

dockerfile scan results:

Passed checks: 103, Failed checks: 12, Skipped checks: 0

Check: CKV_DOCKER_11: "Ensure From Alias are unique for multistage builds."
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds
Check: CKV_DOCKER_5: "Ensure update instructions are not use alone in the Dockerfile"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile
Check: CKV_DOCKER_9: "Ensure that APT isn't used"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used
Check: CKV_DOCKER_11: "Ensure From Alias are unique for multistage builds."
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.
	File: /Docker_images/web_server_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds
Check: CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.FROM
	File: /Docker_images/web_server_image/Dockerfile:1-1
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag
Check: CKV_DOCKER_5: "Ensure update instructions are not use alone in the Dockerfile"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.
	File: /Docker_images/web_server_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile
Check: CKV_DOCKER_9: "Ensure that APT isn't used"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.
	File: /Docker_images/web_server_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used
Check: CKV_DOCKER_11: "Ensure From Alias are unique for multistage builds."
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.
	File: /Docker_images/queue_processing_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds
Check: CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.FROM
	File: /Docker_images/queue_processing_image/Dockerfile:1-1
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag
Check: CKV_DOCKER_5: "Ensure update instructions are not use alone in the Dockerfile"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.
	File: /Docker_images/queue_processing_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile
Check: CKV_DOCKER_9: "Ensure that APT isn't used"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.
	File: /Docker_images/queue_processing_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used
Check: CKV_DOCKER_11: "Ensure From Alias are unique for multistage builds."
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds
Check: CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.FROM
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:1-1
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag
Check: CKV_DOCKER_5: "Ensure update instructions are not use alone in the Dockerfile"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile
Check: CKV_DOCKER_9: "Ensure that APT isn't used"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used
Check: CKV_DOCKER_11: "Ensure From Alias are unique for multistage builds."
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds
Check: CKV_DOCKER_5: "Ensure update instructions are not use alone in the Dockerfile"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile
Check: CKV_DOCKER_9: "Ensure that APT isn't used"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo.html
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environmnet variable"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure.html
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl.html
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl.html
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl.html
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl.html
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl.html
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environmnet variable"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl.html
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environmnet variable"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl.html
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environmnet variable"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl.html
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environmnet variable"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl.html
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environmnet variable"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl.html
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host.html
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host.html
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host.html
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host.html
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host.html
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environmnet variable"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure.html
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure.html
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl.html
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl.html
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl.html
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl.html
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl.html
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed.html
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed.html
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed.html
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed.html
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed.html
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted.html
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted.html
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted.html
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted.html
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted.html
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2.html
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2.html
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2.html
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2.html
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2.html
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed.html
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed.html
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed.html
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed.html
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed.html
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure.html
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force.html
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force.html
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force.html
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force.html
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force.html
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated.html
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated.html
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated.html
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated.html
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated.html
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.RUN
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /Docker_images/web_server_image/Dockerfile.RUN
	File: /Docker_images/web_server_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /Docker_images/queue_processing_image/Dockerfile.RUN
	File: /Docker_images/queue_processing_image/Dockerfile:5-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.RUN
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.RUN
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:3-3
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure.html
Check: CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
	FAILED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.FROM
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:1-1
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag

		1 | FROM amazon/aws-lambda-python:latest

Check: CKV_DOCKER_3: "Ensure that a user for the container has been created"
	FAILED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created

		1 | FROM amazon/aws-lambda-python:latest
		2 | 
		3 | RUN yum update -y && yum install -y python3 python3-dev python3-pip gcc && rm -Rf /var/cache/yum
		4 | 
		5 | COPY sqs-lambda.py ./
		6 | 
		7 | CMD ["sqs-lambda.handler"]

Check: CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
	FAILED for resource: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile.
	File: /cdk.out/asset.9963ca6136aee975c0bfd78c30c7adbe09e26b9aa9508ed8adb9e1c04f552482/dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images

		1 | FROM amazon/aws-lambda-python:latest
		2 | 
		3 | RUN yum update -y && yum install -y python3 python3-dev python3-pip gcc && rm -Rf /var/cache/yum
		4 | 
		5 | COPY sqs-lambda.py ./
		6 | 
		7 | CMD ["sqs-lambda.handler"]

Check: CKV_DOCKER_3: "Ensure that a user for the container has been created"
	FAILED for resource: /Docker_images/web_server_image/Dockerfile.
	File: /Docker_images/web_server_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created

		1 | FROM python:3.12
		2 | 
		3 | COPY . .
		4 | 
		5 | RUN pip install -r requirements.txt
		6 | 
		7 | CMD ["python3", "./web_server_flask.py"]

Check: CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
	FAILED for resource: /Docker_images/web_server_image/Dockerfile.
	File: /Docker_images/web_server_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images

		1 | FROM python:3.12
		2 | 
		3 | COPY . .
		4 | 
		5 | RUN pip install -r requirements.txt
		6 | 
		7 | CMD ["python3", "./web_server_flask.py"]

Check: CKV_DOCKER_3: "Ensure that a user for the container has been created"
	FAILED for resource: /Docker_images/queue_processing_image/Dockerfile.
	File: /Docker_images/queue_processing_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created

		1 | FROM python:3.12
		2 | 
		3 | COPY . .
		4 | 
		5 | RUN pip install -r requirements.txt
		6 | 
		7 | CMD ["python3", "./sqs-lambda.py"]

Check: CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
	FAILED for resource: /Docker_images/queue_processing_image/Dockerfile.
	File: /Docker_images/queue_processing_image/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images

		1 | FROM python:3.12
		2 | 
		3 | COPY . .
		4 | 
		5 | RUN pip install -r requirements.txt
		6 | 
		7 | CMD ["python3", "./sqs-lambda.py"]

Check: CKV_DOCKER_3: "Ensure that a user for the container has been created"
	FAILED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created

		1 | from alpine:3.8
		2 | RUN apk add -U \
		3 |     python3 \
		4 |     py3-pip &&\
		5 |     pip3 install awscli boto3
		6 | COPY ./queue_service.py /queue_service.py
		7 | CMD ["/queue_service.py"]

Check: CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
	FAILED for resource: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile.
	File: /cdk.out/asset.751ace5f65be11bbfe5a8bec47e6e9dc32e760ba9f025621219eea57b1e5ae14/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images

		1 | from alpine:3.8
		2 | RUN apk add -U \
		3 |     python3 \
		4 |     py3-pip &&\
		5 |     pip3 install awscli boto3
		6 | COPY ./queue_service.py /queue_service.py
		7 | CMD ["/queue_service.py"]

Check: CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
	FAILED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.FROM
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:1-1
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag

		1 | FROM amazon/aws-lambda-python:latest

Check: CKV_DOCKER_3: "Ensure that a user for the container has been created"
	FAILED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created

		1 | FROM amazon/aws-lambda-python:latest
		2 | 
		3 | RUN yum update -y && yum install -y python3 python3-dev python3-pip gcc && rm -Rf /var/cache/yum
		4 | 
		5 | COPY sqs-lambda.py ./
		6 | 
		7 | CMD ["sqs-lambda.handler"]

Check: CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
	FAILED for resource: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile.
	File: /cdk.out/asset.0c9408a433c9b28305662f3570af720496240fdb9a8a36db4f2a4cf8f0a2681b/Dockerfile:1-7
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images

		1 | FROM amazon/aws-lambda-python:latest
		2 | 
		3 | RUN yum update -y && yum install -y python3 python3-dev python3-pip gcc && rm -Rf /var/cache/yum
		4 | 
		5 | COPY sqs-lambda.py ./
		6 | 
		7 | CMD ["sqs-lambda.handler"]

secrets scan results:

Passed checks: 0, Failed checks: 1, Skipped checks: 0

Check: CKV_SECRET_3: "Azure Storage Account access key"
	FAILED for resource: bc6c11bbd7e4f9d65a93ec730139e535326a5d59
	File: /cdk.out/CdkProjectStack.template.json:4601-4602
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/secrets-policies/secrets-policy-index/git-secrets-3

		4601 |     "Analytics": "v2:deflate64:H4sIAAAAAAAA/31UwXLjNgz9lr0zbGLPfoAiJzueye66dro9eiAKktlQpEqQdl2O/r1D**********


